{"ast":null,"code":"var _jsxFileName = \"/home/hvn15/SchoolProjects/SystemIntegrationExam/reactclient/src/Food.js\";\nimport React from 'react';\nimport { getAllCategories } from './data';\nexport default class Food extends React.Component {\n  constructor() {\n    super();\n\n    this.foodCategoryButtons = () => {\n      var buttons = [];\n\n      for (var i = 0; i < this.state.categories.length; i++) {\n        buttons.push(React.createElement(\"button\", {\n          onClick: this.chooseCategory,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, this.state.categories[i]));\n      }\n\n      return buttons;\n    };\n\n    this.chooseCategory = e => {\n      console.log(e.target.innerText);\n      this.setState({\n        categoryPicked: e.target.innerText,\n        categoryFinished: true\n      });\n      this.getFoodsOnData(e.target.innerText);\n    };\n\n    this.getFoodsOnData = category => {\n      fetch(\"http://localhost:5009/api/v1/food/category?name=\" + category, {\n        method: \"get\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(data => {\n        return data.json();\n      }).then(json => {\n        this.setState({\n          foodsOfCategories: json\n        });\n      });\n    };\n\n    this.presentCategorizedFoods = () => {\n      var buttons = [];\n\n      for (var i = 0; i < this.state.foodsOfCategories.length; i++) {\n        buttons.push(React.createElement(\"button\", {\n          id: this.state.foodsOfCategories[i].id,\n          onClick: this.chooseFood,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, this.state.foodsOfCategories[i].name));\n      }\n\n      return buttons;\n    };\n\n    this.chooseFood = e => {\n      this.setState({\n        foodName: e.target.innerText\n      });\n      fetch(\"http://localhost:5009/api/v1/food/\" + e.target.id, {\n        method: \"get\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(data => {\n        return data.json();\n      }).then(json => {\n        this.setState({\n          foodDescription: json.description\n        });\n      });\n      console.log(e.target.innerText);\n    };\n\n    this.confirmFood = () => {\n      if (this.state.foodDescription !== \"\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"food description: \", this.state.foodName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, this.state.foodDescription), React.createElement(\"button\", {\n          onClick: this.foodPurchased(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"confirm food choice\"));\n      }\n    };\n\n    this.foodPurchased = () => {\n      {\n        this.props.done(\"food done\");\n      }\n    };\n\n    this.foodSteps = () => {\n      if (this.state.categoryFinished === false && this.state.foodChoiceFinished === false) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"booking id:\", this.props.bookingId, \", ticket id:\", this.props.ticketId, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Food\"), this.foodCategoryButtons());\n      }\n\n      if (this.state.categoryFinished === true && this.state.foodChoiceFinished === false) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"time for food pick \", this.state.categoryPicked), this.presentCategorizedFoods(), this.confirmFood());\n      }\n    };\n\n    this.state = {\n      categories: [],\n      foodsOfCategories: [],\n      foodName: \"\",\n      categoryPicked: \"\",\n      categoryFinished: false,\n      foodChoiceFinished: false,\n      foodDescription: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5009/api/v1/food/categories\", {\n      method: \"get\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(data => {\n      return data.json();\n    }).then(json => {\n      this.setState({\n        categories: json\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.foodSteps());\n  }\n\n}","map":{"version":3,"sources":["/home/hvn15/SchoolProjects/SystemIntegrationExam/reactclient/src/Food.js"],"names":["React","getAllCategories","Food","Component","constructor","foodCategoryButtons","buttons","i","state","categories","length","push","chooseCategory","e","console","log","target","innerText","setState","categoryPicked","categoryFinished","getFoodsOnData","category","fetch","method","headers","then","data","json","foodsOfCategories","presentCategorizedFoods","id","chooseFood","name","foodName","foodDescription","description","confirmFood","foodPurchased","props","done","foodSteps","foodChoiceFinished","bookingId","ticketId","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { getAllCategories } from './data'\n\nexport default class Food extends React.Component {\n    constructor() {\n        super();\n        this.state = { categories: [], foodsOfCategories:[], foodName: \"\", categoryPicked: \"\", categoryFinished: false, foodChoiceFinished: false, foodDescription: \"\"}\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:5009/api/v1/food/categories\", {\n            method: \"get\", headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then((data) => {\n            return data.json();\n        }).then((json) => {\n            this.setState({ categories: json });\n        })\n    }\n\n    foodCategoryButtons = () => {\n        var buttons = [];\n        for (var i = 0; i < this.state.categories.length; i++) {\n            buttons.push(<button onClick={this.chooseCategory}>{this.state.categories[i]}</button>);\n        }\n        return buttons;\n    }\n\n    chooseCategory = (e) => {\n        console.log(e.target.innerText);\n        this.setState({ categoryPicked: e.target.innerText, categoryFinished: true });\n        this.getFoodsOnData(e.target.innerText);\n    }\n\n    getFoodsOnData = (category) => {\n        fetch(\"http://localhost:5009/api/v1/food/category?name=\"+category, {method: \"get\", headers:{\n            'Content-Type': 'application/json'    \n        }\n    }).then((data)=>{\n        return data.json();\n    }).then((json) => {\n        this.setState({foodsOfCategories: json});\n    })\n    }\n    presentCategorizedFoods = () => {\n        var buttons = [];\n        for (var i = 0; i < this.state.foodsOfCategories.length; i++) {\n            buttons.push(<button id={this.state.foodsOfCategories[i].id} onClick={this.chooseFood}>{this.state.foodsOfCategories[i].name}</button>);\n        }\n        return buttons;\n    }\n    chooseFood = (e) => {\n        this.setState({foodName: e.target.innerText});\n        fetch(\"http://localhost:5009/api/v1/food/\" + e.target.id, {           method: \"get\", headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then((data) => {\n        return data.json();\n    }).then((json) => {\n        this.setState({foodDescription : json.description});\n    })\n        console.log(e.target.innerText);\n    }\n\n    confirmFood = () => {\n        if(this.state.foodDescription !== \"\"){\n            return (<div>\n        <h1>food description: {this.state.foodName}</h1>\n                <p>{this.state.foodDescription}</p>\n                <button onClick={this.foodPurchased()}>confirm food choice</button>\n            </div>)\n        }\n    }\n\n    foodPurchased = () => {\n        {this.props.done(\"food done\")}\n    }\n\n    foodSteps = () => {\n        if (this.state.categoryFinished === false && this.state.foodChoiceFinished === false) {\n            return <div>booking id:{this.props.bookingId}\n                , ticket id:{this.props.ticketId}\n                <h1>Food</h1>\n                {this.foodCategoryButtons()}</div>\n        }\n        if (this.state.categoryFinished === true && this.state.foodChoiceFinished === false) {\n        return <div><p>time for food pick {this.state.categoryPicked}</p>\n            {this.presentCategorizedFoods()}\n            {this.confirmFood()}\n            </div>\n        }\n    }\n\n    render() {\n        return <div>\n            {this.foodSteps()}\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}