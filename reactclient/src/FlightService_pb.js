/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.sebastiangds.flightservice.BookingInfo', null, global);
goog.exportSymbol('proto.com.sebastiangds.flightservice.GetBookingReply', null, global);
goog.exportSymbol('proto.com.sebastiangds.flightservice.GetBookingRequest', null, global);
goog.exportSymbol('proto.com.sebastiangds.flightservice.TicketInfo', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.sebastiangds.flightservice.GetBookingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.sebastiangds.flightservice.GetBookingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.sebastiangds.flightservice.GetBookingRequest.displayName = 'proto.com.sebastiangds.flightservice.GetBookingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.GetBookingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.sebastiangds.flightservice.GetBookingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.sebastiangds.flightservice.GetBookingRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.GetBookingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingId: msg.getBookingId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.sebastiangds.flightservice.GetBookingRequest} The clone.
 */
proto.com.sebastiangds.flightservice.GetBookingRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.sebastiangds.flightservice.GetBookingRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 booking_id = 1;
 * @return {number}
 */
proto.com.sebastiangds.flightservice.GetBookingRequest.prototype.getBookingId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.sebastiangds.flightservice.GetBookingRequest.prototype.setBookingId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.sebastiangds.flightservice.GetBookingReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.sebastiangds.flightservice.GetBookingReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.sebastiangds.flightservice.GetBookingReply.displayName = 'proto.com.sebastiangds.flightservice.GetBookingReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.GetBookingReply.prototype.toObject = function(opt_includeInstance) {
  return proto.com.sebastiangds.flightservice.GetBookingReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.sebastiangds.flightservice.GetBookingReply} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.GetBookingReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    booking: (f = msg.getBooking()) && proto.com.sebastiangds.flightservice.BookingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.sebastiangds.flightservice.GetBookingReply} The clone.
 */
proto.com.sebastiangds.flightservice.GetBookingReply.prototype.cloneMessage = function() {
  return /** @type {!proto.com.sebastiangds.flightservice.GetBookingReply} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional BookingInfo booking = 1;
 * @return {proto.com.sebastiangds.flightservice.BookingInfo}
 */
proto.com.sebastiangds.flightservice.GetBookingReply.prototype.getBooking = function() {
  return /** @type{proto.com.sebastiangds.flightservice.BookingInfo} */ (
    jspb.Message.getWrapperField(this, proto.com.sebastiangds.flightservice.BookingInfo, 1));
};


/** @param {proto.com.sebastiangds.flightservice.BookingInfo|undefined} value  */
proto.com.sebastiangds.flightservice.GetBookingReply.prototype.setBooking = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.sebastiangds.flightservice.GetBookingReply.prototype.clearBooking = function() {
  this.setBooking(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.com.sebastiangds.flightservice.GetBookingReply.prototype.hasBooking = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.sebastiangds.flightservice.BookingInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.sebastiangds.flightservice.BookingInfo.repeatedFields_, null);
};
goog.inherits(proto.com.sebastiangds.flightservice.BookingInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.sebastiangds.flightservice.BookingInfo.displayName = 'proto.com.sebastiangds.flightservice.BookingInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.sebastiangds.flightservice.BookingInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.sebastiangds.flightservice.BookingInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.sebastiangds.flightservice.BookingInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.BookingInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingId: msg.getBookingId(),
    price: msg.getPrice(),
    ticketsList: jspb.Message.toObjectList(msg.getTicketsList(),
    proto.com.sebastiangds.flightservice.TicketInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.sebastiangds.flightservice.BookingInfo} The clone.
 */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.cloneMessage = function() {
  return /** @type {!proto.com.sebastiangds.flightservice.BookingInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 booking_id = 1;
 * @return {number}
 */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.getBookingId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.setBookingId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double price = 2;
 * @return {number}
 */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.setPrice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated TicketInfo tickets = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.sebastiangds.flightservice.TicketInfo>}
 */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.getTicketsList = function() {
  return /** @type{!Array.<!proto.com.sebastiangds.flightservice.TicketInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.sebastiangds.flightservice.TicketInfo, 3));
};


/** @param {Array.<!proto.com.sebastiangds.flightservice.TicketInfo>} value  */
proto.com.sebastiangds.flightservice.BookingInfo.prototype.setTicketsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.com.sebastiangds.flightservice.BookingInfo.prototype.clearTicketsList = function() {
  this.setTicketsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.sebastiangds.flightservice.TicketInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.sebastiangds.flightservice.TicketInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.sebastiangds.flightservice.TicketInfo.displayName = 'proto.com.sebastiangds.flightservice.TicketInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.sebastiangds.flightservice.TicketInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.sebastiangds.flightservice.TicketInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.sebastiangds.flightservice.TicketInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketId: msg.getTicketId(),
    flightId: msg.getFlightId(),
    firstName: msg.getFirstName(),
    lastName: msg.getLastName(),
    depAiportName: msg.getDepAiportName(),
    depAiportIata: msg.getDepAiportIata(),
    arrAiportName: msg.getArrAiportName(),
    arrAiportIata: msg.getArrAiportIata()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.sebastiangds.flightservice.TicketInfo} The clone.
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.cloneMessage = function() {
  return /** @type {!proto.com.sebastiangds.flightservice.TicketInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string ticket_id = 1;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getTicketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setTicketId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 flight_id = 2;
 * @return {number}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getFlightId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setFlightId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setFirstName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string last_name = 4;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setLastName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string dep_aiport_name = 5;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getDepAiportName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setDepAiportName = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string dep_aiport_iata = 6;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getDepAiportIata = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setDepAiportIata = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string arr_aiport_name = 7;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getArrAiportName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setArrAiportName = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string arr_aiport_iata = 8;
 * @return {string}
 */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.getArrAiportIata = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.com.sebastiangds.flightservice.TicketInfo.prototype.setArrAiportIata = function(value) {
  jspb.Message.setField(this, 8, value);
};


goog.object.extend(exports, proto.com.sebastiangds.flightservice);
